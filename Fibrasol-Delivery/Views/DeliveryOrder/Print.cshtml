@{
    ViewData["Title"] = "Itinerario Despacho";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            font-size: 12px;
        }

        .header {
            text-align: center;
            margin-bottom: 20px;
        }

        .header h1 {
            font-size: 18px;
            margin: 0;
            font-weight: bold;
        }

        .header-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .info-box {
            border: 2px solid black;
            padding: 5px 10px;
            display: inline-block;
            margin-left: 10px;
        }

        .delivery-table {
            width: 100%;
            border-collapse: collapse;
            border: 2px solid black;
            margin-bottom: 20px;
        }

        .delivery-table th,
        .delivery-table td {
            border: 1px solid black;
            padding: 8px;
            text-align: center;
            vertical-align: top;
        }

        .delivery-table th {
            background-color: #f0f0f0;
            font-weight: bold;
            font-size: 11px;
        }

        .delivery-table td {
            font-size: 10px;
        }

        .client-cell {
            text-align: center;
            vertical-align: middle;
            font-weight: bold;
            background-color: #f9f9f9;
        }

        .address-cell {
            text-align: left;
            padding-left: 5px;
        }

        .total-row {
            font-weight: bold;
            border-top: 2px solid black;
        }

        .signatures {
            display: flex;
            justify-content: space-between;
            margin-top: 30px;
        }

        .signature-box {
            width: 45%;
            text-align: center;
        }

        .signature-line {
            border-bottom: 1px solid black;
            margin-bottom: 5px;
            height: 40px;
        }

        @@media print {
            body {
                margin: 0;
            }

            .no-print {
                display: none;
            }
        }
    </style>
</head>
<body>
    <div class="header-info">
        <div class="header">
            <h1>ITINERARIO DESPACHO</h1>
        </div>
        <div>
            <span>NO. ITINERARIO:</span>
            <span class="info-box" id="orderNumber">1</span>
            <span style="margin-left: 20px;">FECHA:</span>
            <span class="info-box" id="orderDate">7-Jan</span>
        </div>
    </div>

    <table class="delivery-table">
        <thead>
            <tr>
                <th>CLIENTES</th>
                <th>DIRECCION</th>
                <th>REF.<br>INTERNA</th>
                <th>VALOR</th>
                <th>VENDEDOR</th>
                <th>NO.<br>COMANDA</th>
                <th>PESO TOTAL<br>TONELADA</th>
            </tr>
        </thead>
        <tbody id="deliveryTableBody">
            <!-- Data will be populated here -->
        </tbody>
        <tfoot>
            <tr class="total-row">
                <td colspan="3"></td>
                <td id="totalAmount">Q45,776.60</td>
                <td colspan="3"></td>
            </tr>
        </tfoot>
    </table>

    <div class="signatures">
        <div class="signature-box">
            <div style="text-align: left;">
                <strong>DUFAS</strong> &nbsp;&nbsp;&nbsp; Y &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>XAVI</strong>
            </div>
            <div class="signature-line"></div>
            <div><strong>FIRMA Y NOMBRE DEL PILOTO</strong></div>
        </div>
        <div class="signature-box">
            <div class="signature-line"></div>
            <div><strong>FIRMA DE QUIEN ENTREGA ITINERARIO</strong></div>
        </div>
    </div>

    <div class="no-print" style="margin-top: 20px; text-align: center;">
        <button onclick="window.print()" style="padding: 10px 20px; font-size: 14px;">Imprimir</button>
        <button onclick="window.close()" style="padding: 10px 20px; font-size: 14px; margin-left: 10px;">Cerrar</button>
    </div>

    <script>
        // Get order ID from URL
        const pathParts = window.location.pathname.split('/');
        const orderId = pathParts[pathParts.length - 2]; // Gets the ID before 'impresion'

        // Load the delivery order data
        async function loadDeliveryOrderData() {
            try {
                const response = await fetch(`/delivery-orders/${orderId}`);
                const orderData = await response.json();

                if (orderData) {
                    populateOrderData(orderData);
                } else {
                    console.error('No order data found');
                    alert('No se encontraron datos de la orden');
                }
            } catch (error) {
                console.error('Error loading delivery order:', error);
                alert('Error al cargar los datos de la orden');
            }
        }

        function populateOrderData(orderData) {
            // Set header information
            document.getElementById('orderNumber').textContent = orderData.id;

            // Format date
            const orderDate = new Date(orderData.createdAt || new Date());
            const formattedDate = orderDate.toLocaleDateString('es-GT', {
                day: 'numeric',
                month: 'short'
            });
            document.getElementById('orderDate').textContent = formattedDate;

            // Populate table
            populateTable(orderData);

            // Set total
            document.getElementById('totalAmount').textContent = `Q${orderData.total.toLocaleString('es-GT', { minimumFractionDigits: 2 })}`;
        }

        function populateTable(orderData) {
            const tbody = document.getElementById('deliveryTableBody');
            tbody.innerHTML = '';

            if (!orderData.backorders || orderData.backorders.length === 0) {
                tbody.innerHTML = '<tr><td colspan="7">No hay comandas para mostrar</td></tr>';
                return;
            }

            orderData.backorders.forEach(backorder => {
                if (!backorder.invoices || backorder.invoices.length === 0) {
                    // If no invoices, show just the backorder info
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td class="client-cell">${backorder.client ? backorder.client.name : 'N/A'}</td>
                        <td class="address-cell">N/A</td>
                        <td>N/A</td>
                        <td>Q0.00</td>
                        <td></td>
                        <td>${backorder.number || 'N/A'}</td>
                        <td>${backorder.weight ? backorder.weight.toFixed(1) : '0.0'}</td>
                    `;
                    tbody.appendChild(row);
                } else {
                    // Show each invoice as a separate row
                    backorder.invoices.forEach((invoice, index) => {
                        const row = document.createElement('tr');

                        // For the first invoice, show client name and backorder info
                        if (index === 0) {
                            row.innerHTML = `
                                <td class="client-cell" rowspan="${backorder.invoices.length}">${backorder.client ? backorder.client.name : 'N/A'}</td>
                                <td class="address-cell">${invoice.address || 'N/A'}</td>
                                <td>${invoice.reference || 'N/A'}</td>
                                <td>Q${invoice.value ? invoice.value.toLocaleString('es-GT', { minimumFractionDigits: 2 }) : '0.00'}</td>
                                <td></td>
                                <td class="client-cell" rowspan="${backorder.invoices.length}">${backorder.number || 'N/A'}</td>
                                <td class="client-cell" rowspan="${backorder.invoices.length}">${backorder.weight ? backorder.weight.toFixed(1) : '0.0'}</td>
                            `;
                        } else {
                            // For subsequent invoices, don't repeat client name and backorder info
                            row.innerHTML = `
                                <td class="address-cell">${invoice.address || 'N/A'}</td>
                                <td>${invoice.reference || 'N/A'}</td>
                                <td>Q${invoice.value ? invoice.value.toLocaleString('es-GT', { minimumFractionDigits: 2 }) : '0.00'}</td>
                                <td></td>
                            `;
                        }

                        tbody.appendChild(row);
                    });
                }
            });
        }

        // Load data when page loads
        document.addEventListener('DOMContentLoaded', loadDeliveryOrderData);
    </script>
</body>
</html>